---
- hosts: DSservers
  roles:
    - role: kwoodson.yedit
    #- role: gantsign.java
    #  java_version: '8.0.402+6' # Java 8

  tasks:
    - name: Checking System Information
      debug:
        msg: "The hostname is {{ ansible_distribution }}, version: {{ ansible_facts['lsb']['release'] }}."

    - name: Gathering Package Facts
      package_facts:
        manager: auto

    - name: MongoDB Installation and Configuration
      block:
        - name: MongoDB Installation
          # Following https://www.mongodb.com/docs/v5.0/tutorial/install-mongodb-on-ubuntu/
          block:
            - name: MongoDB - Installing GNU PG
              become: true
              apt:
                name: gnupg

            - name: MongoDB - Get MongoDB PGP
              become: true
              shell: curl -fsSL https://pgp.mongodb.com/server-5.0.asc | \ gpg -o /usr/share/keyrings/mongodb-server-5.0.gpg --batch --yes \ --dearmor
              async: 10
              poll: 10
              register: mongodb_pgp_output
    
            - name: MongoDB - Check PGP installed
              debug: var=mongodb_pgp_output
    
            - name: MongoDB - Create a list file for MongoDB
              become: true
              shell: echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-5.0.gpg ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list
              async: 10
              poll: 10
              register: mongodb_list_file_output
    
            - name: MongoDB - Check MongoDB list file installed
              debug: var=mongodb_list_file_output
    
            - name: MongoDB - Update apt packages
              become: true
              apt:
                update_cache: yes

            - name: MongoDB - Installing MongoDB.
              become: true
              apt:
                name: mongodb

            - name: MongoDB - Create Opal User
              shell: 'mongo admin --eval "db.createUser({
              user: \"{{ opaluser }}\",
              pwd: \"{{ opalpass }}\",
              roles: [ { role: \"root\", db: \"admin\" } ]})"'

              #user: \"{{ opaluser }}\",
              #pwd: \"{{ opalpass }}\",
              #roles: [ { role: \"root\", db: \"admin\" } ],
              #mechanisms:[  
              #  \"SCRAM-SHA-1\"
              #]})"'

              register: mongodb_opal_user_output
              
          when: "not 'mongodb' in ansible_facts.packages"
          
        #- name: MongoDB - Check if MongoDB Configured
        #  set_fact:
        #    #MongoDB_Configured: (MongoDB_Moved_Before & MongoDB_Opal_User_Created ) | false
        #    # MongoDB_Configured: false
        #- name: MongoDB - Check facts
        #  debug:
        #    msg: "MongoDB_Moved_Before: {{ MongoDB_Moved_Before }} and MongoDB_Opal_User_Created: {{ MongoDB_Opal_User_Created }}. Then is MongoDB_Configured: {{ MongoDB_Configured }}."

  
        #- name: Move MongoDB
        #  block: 
        #    - name: MongoDB - Stop
        #      systemd:
        #        name: mongodb
        #        state: stopped
        #    - name: MongoDB - Mount MongoDB
        #      copy:
        #        src: /var/lib/mongodb
        #        dest: /mnt/mongodb
        #        owner: mongodb
        #        group: mongodb
        #        remote_src: true
        #        #mode: u=rw,g=r,o=r
        #    - name: MongoDB - Remove Original MongoDB lib
        #      file:
        #        path: /var/lib/mongodb
        #        state: absent
        #    - name: MongoDB - Create Symbolic Link
        #      become: true 
        #      file:
        #        src: "/mnt/mongodb"
        #        dest: "/var/lib/mongodb"
        #        owner: mongodb
        #        group: mongodb
        #        state: link
        #        force: yes   
        #      with_items:
        #        - src: terraform
        #        - src: tfenv
        #    - name: MongoDB - Restart
        #      systemd:
        #        name: mongodb
        #        state: restarted
        #    - name: MongoDB - Mark as Moved
        #      set_fact:
        #        MongoDB_Moved_Before: true
        #  when: "not MongoDB_Configured"

        #- name: MongoDB - Create Opal User
        #  shell: 'mongo admin --eval "db.createUser({user: \"{{ opaluser }}\", pwd: \"{{ opalpass }}\", roles: [ { role: \"root\", db: \"admin\" } ]})"'
        #  register: mongodb_opal_user_output
        #  when: "not MongoDB_Configured"

        #- name: MongoDB - Mark Opal User as Created
        #  set_fact:
        #    MongoDB_Opal_User_Created: true
        #  when: "not MongoDB_Configured"


    - name: R Installation
      block:
        - name: R - Add apt Key
          become: true
          apt_key:
            keyserver: keyserver.ubuntu.com
            id: E298A3A825C0D65DFD57CBB651716619E084DAB9

        # - name: R - Add apt Key
        #   become: true
        #   shell: "add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/'"

        # - name: R - Update apt packages
        #   become: true
        #   apt:
        #     update_cache: yes

        - name: R - Install Base R
          become: true
          apt:
            pkg:
              - r-base 
              - r-base-core 
              - r-base-dev
        - name: R - Install R Packages
          become: true
          apt:
            pkg:
              - libpq-dev 
              - libmariadbclient-dev 
              - libssh-dev 
              - libssl-dev 
              - libsasl2-dev 
              - libxml2-dev 
              - libcurl4-openssl-dev 
              - libfontconfig1-dev
              - libmagick++-dev 
              - freeglut3-dev 
              - libharfbuzz-dev 
              - libfribidi-dev  
              - libjq-dev 
              - cmake 
              - cargo
              - r-cran-jsonlite

    # - name: OpalR Installation
    #   block:
    #     - name: OpalR - Installation, this might take a while
    #       shell: Rscript -e "install.packages(c('resourcer', 'opalr', 'tidyverse', 'knitr', 'rmarkdown', 'BiocManager'), repos=c('https://cloud.r-project.org', 'https://cran.obiba.org'), dependencies=TRUE, lib='/usr/local/lib/R/site-library')"
    #     - name: OpalR - Also Installing Rserve
    #       shell: Rscript -e "install.packages('Rserve', 'http://www.rforge.net/', type='source', lib='/usr/local/lib/R/site-library')"
    #     - name: OpalR - Also Installing lme4
    #       shell: Rscript -e "install.packages('lme4', 'http://www.rforge.net/', type='source', lib='/usr/local/lib/R/site-library')"
    #     - name: OpalR - Also Installing dplyr
    #       shell: Rscript -e "install.packages('dplyr', 'http://www.rforge.net/', type='source', lib='/usr/local/lib/R/site-library')"
    #     - name: OpalR - Also Installing reshape2
    #       shell: Rscript -e "install.packages('reshape2', 'http://www.rforge.net/', type='source', lib='/usr/local/lib/R/site-library')"

    - name: Opal Installation
      block:
        - name: Opal - Get Opal Key
          become: true
          shell: curl -fsSL https://www.obiba.org/assets/obiba-pub.pem | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/obiba.gpg
          register: opal_obiba_ouput
        - name: Opal - Tee Opal
          become: true
          shell: echo 'deb https://obiba.jfrog.io/artifactory/debian-local all main' | sudo tee /etc/apt/sources.list.d/obiba.list
          register: opal_tee_output
        - name: Opal - Update apt packages
          become: true
          apt:
            update_cache: yes
        - name: Opal - Installing Opal
          become: true
          apt:
            name: opal
        #- name: Opal - Configure Port
        #  become: true
        #  lineinfile:
        #    path: /etc/opal/opal-config.properties
        #    search_string: 'org.obiba.realm.url'
        #    line: "org.obiba.realm.url=https://localhost:{{opalport}}"
        - name: Opal - Configure Port (HTTP)
          become: true
          lineinfile:
            path: /etc/opal/opal-config.properties
            search_string: 'org.obiba.opal.http.port'
            line: "org.obiba.opal.http.port={{opalHTTPport}}"

        - name: Opal - Configure Port (HTTPS)
          become: true
          lineinfile:
            path: /etc/opal/opal-config.properties
            search_string: 'org.obiba.opal.https.port'
            line: "org.obiba.opal.https.port={{opalHTTPSport}}"

        - name: Opal - Restarting Opal to Run on Custom Port
          become: true
          systemd:
            name: opal
            state: restarted

    - name: Rock Installation and Configuration
      block:
        - name: Rock - Installing Rock
          become: true
          apt:
            name: rock
          async: 900
          poll: 900
        
        ## https://rockdoc.obiba.org/en/latest/admin/configuration.html#users-configuration
        ## This Step is required for when ROCK_HOME is not defined
        ## It defaults to '/etc/opal'
        #- name: Rock - Set Rock Config
        #  ansible.builtin.set_fact:
        #    ROCK_CONFIG_PATH: "/etc/opal/rock/conf/application.yml"
        #  register: rock_set_fact_output
        #- debug: var=rock_set_fact_output
        ## Step 1: Edit File (# administrator, can do all)
        ## https://docs.ansible.com/ansible/latest/collections/ansible/builtin/blockinfile_module.html
        ##security:
        ##  users:
        ##  # administrator, can do all
        ##  - id: administrator
        ##    secret: "{bcrypt}$2y$10$Ds/CB6jlY5a4/NU4.RvRI.9oZ16Bp6hx/Xcct1c2XFwYRdMbTHJVu"
        ##    roles: administrator

        ## similarly manager and user are 1, 2

        ## yedit from Ansible Galaxy to configure .yamls
        #- name: Rock - Check Admin Username Readable
        #  become: true
        #  yedit:
        #    src: "/etc/opal/rock/conf/application.yml"
        #    key: security.users
        #    state: "list"
        #  register: yeditout
        #- debug: var=yeditout
        #- name: Rock - Update Admin Username
        #  become: true
        #  yedit:
        #    src: "/etc/opal/rock/conf/application.yml"
        #    key: security.users[0].id
        #    value: "{{rockadmin}}"
        #- name: Rock - Update Admin Password
        #  become: true
        #  yedit:
        #    src: "{{ROCK_CONFIG_PATH}}"
        #    key: security.users[0].secret
        #    value: "{{rockpass}}"
        
        ## Step 3: Restart Rock Service
        #- name: Rock - Check if Rock Running
        #  become: true
        #  systemd:
        #    name: rock
        #    state: restarted

        ## Step 4: Check Rock Service Running
        #- name: Rock - Check if Rock Running
        #  become: true
        #  systemd:
        #    name: rock
        #    state: started

        ## Step 5: Update variables on opal-side
        #- name: Opal - Set Opal Config
        #  ansible.builtin.set_fact:
        #    OPAL_CONFIG_PATH: "/etc/opal/opal/conf/opal-config.properties"
        #  register: opal_set_fact_output
        #- debug: var=opal_set_fact_output
        #- name: Opal - Update Rock Admin Username
        #  become: true
        #  lineinfile:
        #    path: "{{OPAL_CONFIG_PATH}}"
        #    search_string: 'rock.default.administrator.username'
        #    line: "rock.default.administrator.username={{rockadmin}}"
        #    state: present
        #- name: Opal - Update Rock Admin Password
        #  become: true
        #  lineinfile:
        #    path: "{{OPAL_CONFIG_PATH}}"
        #    search_string: 'rock.default.administrator.password'
        #    line: "rock.default.administrator.password={{rockpass}}"
        #    state: present

        ## Step 6: Restart Opal
        #- name: Opal - Restarting Opal to Update Rock Information
        #  become: true
        #  systemd:
        #    name: opal
        #    state: restarted

        ## Step 7: Check opal running
        #- name: Opal - Check Opal running correctly
        #  become: true
        #  systemd:
        #    name: opal
        #    state: started

    - name: Opal Python API Installation
      block:
        - name: PIP Installation
          become: true
          apt:
            name: python3-pip
        - name: Opal Python API Installation
          become: true
          shell: pip install obiba-opal
          register: obiba_opal_output
