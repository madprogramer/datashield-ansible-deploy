---
- hosts: DSservers

  # Pre-Roles Tasks
  pre_tasks:

    - name: apt - Update cache
      become: true
      apt:
        update_cache: yes
    - name: Install unzip package
      become: true
      apt:
        name: zip

  # Roles
  roles:

    # From Galaxy
    - role: kwoodson.yedit

    - role: gantsign.java
      java_version: '11.0.22' # Java 11

    # Custom
    - role: datashield-getinfo
    - role: datashield-mongodb-setup

  # Tasks
  tasks:
    # - name: R Installation (Legacy)
    #   block:
    #     - name: R - Add apt Key
    #       become: true
    #       apt_key:
    #         keyserver: keyserver.ubuntu.com
    #         id: E298A3A825C0D65DFD57CBB651716619E084DAB9

    #     # - name: R - Add apt Key
    #     #   become: true
    #     #   shell: "add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/'"

    #     # - name: R - Update apt packages
    #     #   become: true
    #     #   apt:
    #     #     update_cache: yes

        # - name: R - Install Base R
        #   become: true
        #   apt:
        #     pkg:
        #       - r-base 
        #       - r-base-core 
        #       - r-base-dev
        # - name: R - Install R Packages
        #   become: true
        #   apt:
        #     pkg:
        #       - libpq-dev 
        #       - libmariadbclient-dev 
        #       - libssh-dev 
        #       - libssl-dev 
        #       - libsasl2-dev 
        #       - libxml2-dev 
        #       - libcurl4-openssl-dev 
        #       - libfontconfig1-dev
        #       - libmagick++-dev 
        #       - freeglut3-dev 
        #       - libharfbuzz-dev 
        #       - libfribidi-dev  
        #       - libjq-dev 
        #       - cmake 
        #       - cargo
        #       - r-cran-jsonlite
    
    - name: R Installation
      block:

        # TODO: CHECK IF R INSTALLED AND SKIP IF INSTALLED

        - name: Create R image dir
          become: true
          ansible.builtin.file:
            path: R-images
            state: directory
        #- name: Export R_VERSION_INSTALLED_BY_ANSIBLE variable
        #  environment:
        #    R_VERSION_INSTALLED_BY_ANSIBLE: "4.3.3"
        #  shell: echo "R_VERSION_INSTALLED_BY_ANSIBLE is $R_VERSION_INSTALLED_BY_ANSIBLE. TODO! Parameterise"
        - name: R - Get R Image
          become: true
          shell: curl -o R-images/r-{{ R_VERSION_INSTALLED_BY_ANSIBLE }}_1_amd64.deb https://cdn.rstudio.com/r/ubuntu-2004/pkgs/r-{{ R_VERSION_INSTALLED_BY_ANSIBLE }}_1_amd64.deb
          register: R_curl_output
        - name: R - Gdebi R Image
          become: true
          shell: gdebi --n R-images/r-{{ R_VERSION_INSTALLED_BY_ANSIBLE }}_1_amd64.deb
          register: R_gdebi_output
        - name: R - Test for Errors
          become: true
          shell: /opt/R/{{ R_VERSION_INSTALLED_BY_ANSIBLE }}/bin/R --version
          register: R_version_output
        - name: Create symbolic link for R
          file:
            src: /opt/R/{{ R_VERSION_INSTALLED_BY_ANSIBLE }}/bin/R
            dest: /usr/local/bin/R
            state: link
        - name: Create symbolic link for Rscript
          file:
            src: /opt/R/{{ R_VERSION_INSTALLED_BY_ANSIBLE }}/bin/Rscript
            dest: /usr/local/bin/Rscript
            state: link

    - name: R Packages Installation
      block:
         
        - name: R Packages - Install XML
          become: true
          apt:
            name: libxml2-dev
        - name: R Packages - Install OpenSSL
          become: true
          apt:
            name: libcurl4-openssl-dev

        # - name: R Packages - Install Pacman
        #   shell: Rscript -e "install.packages(c('pacman'), repos=c('https://cran.r-project.org/'), dependencies=TRUE)"
        #   become: true
        # - name: R Packages - dsBase Installation
        #   shell: Rscript -e "pacman::p_install_gh('datashield/dsBase', dependencies=TRUE)"
        #   become: true
        # - name: R Packages - Helper Packages Installation, this might take a while
        #   shell: Rscript -e "install.packages(c('resourcer', 'knitr', 'rmarkdown', 'BiocManager'), repos=c('https://cran.r-project.org/'), dependencies=TRUE)"
        #   become: true
        # - name: R Packages - OpalR Installation, this might take a while
        #   shell: Rscript -e "pacman::p_install_gh('obiba/opalr', dependencies=TRUE)"
        #   become: true
        # - name: R Packages - dsSwissKnife Installation, this might take a while
        #   shell: Rscript -e "pacman::p_install_gh('sib-swiss/dsSwissKnife', dependencies=TRUE)"
        #   become: true

        # LEGACY  
        #- name: OpalR - Installation, this might take a while
        #  shell: Rscript -e "install.packages(c('resourcer', 'opalr', 'tidyverse', 'knitr', 'rmarkdown', 'BiocManager'), repos=c('https://cloud.r-project.org', 'https://cran.obiba.org'), dependencies=TRUE)"
        #  become: true
        # - name: OpalR - Also Installing Rserve
        #   shell: Rscript -e "install.packages('Rserve', 'http://www.rforge.net/', type='source', lib='/usr/local/lib/R/site-library')"
        #   become: true
        # - name: OpalR - Also Installing lme4
        #   shell: Rscript -e "install.packages('lme4', 'http://www.rforge.net/', type='source', lib='/usr/local/lib/R/site-library')"
        #   become: true
        # - name: OpalR - Also Installing dplyr
        #   shell: Rscript -e "install.packages('dplyr', 'http://www.rforge.net/', type='source', lib='/usr/local/lib/R/site-library')"
        #   become: true
        # - name: OpalR - Also Installing reshape2
        #   shell: Rscript -e "install.packages('reshape2', 'http://www.rforge.net/', type='source', lib='/usr/local/lib/R/site-library')"
        #   become: true
    - name: Opal Installation
      block:
        - name: Opal - Get Opal Key
          become: true
          shell: curl -fsSL https://www.obiba.org/assets/obiba-pub.pem | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/obiba.gpg
          register: opal_obiba_output
        - name: Opal - Tee Opal
          become: true
          shell: echo 'deb https://obiba.jfrog.io/artifactory/debian-local all main' | sudo tee /etc/apt/sources.list.d/obiba.list
          register: opal_tee_output
        - name: Opal - Update apt packages
          become: true
          apt:
            update_cache: yes
        - name: Opal - Installing Opal
          become: true
          apt:
            name: opal

    - name: Opal Configuration
      block:

      - name: Set Java Version
        become:
        lineinfile:
          path: /etc/default/opal
          search_string: 'JAVA='
          line: "JAVA=/opt/java/jdk-11.0.22+7/bin/java"

      # - name: Run shiro-hasher
      #   become: true
      #   expect:
      #     command: "./shiro-hasher -p"
      #     responses:
      #       "(.*)Password(.*)": "{{ opal_administrator_password }}"
      #     chdir: "/usr/share/opal/tools/"
      #     echo: true
      #   register: shiro_hasher_result

      # # Debugging  
 
      # - name: Display shiro-hasher output
      #   debug:
      #     var: shiro_hasher_result.stdout_lines[2]

      # - name: Display intended password
      #   debug:
      #     var: opal_administrator_password

      # - name: Opal - Update Admin Password 
      #   become: true
      #   lineinfile:
      #     path: /etc/opal/shiro.ini
      #     search_string: 'administrator ='
      #     line: "administrator = {{shiro_hasher_result.stdout_lines[2]}},admin"

      # #- name: Opal - Configure Port
      # #  become: true
      # #  lineinfile:
      # #    path: /etc/opal/opal-config.properties
      # #    search_string: 'org.obiba.realm.url'
      # #    line: "org.obiba.realm.url=https://localhost:{{opalport}}"
      # - name: Opal - Configure Port (HTTP)
      #   become: true
      #   lineinfile:
      #     path: /etc/opal/opal-config.properties
      #     search_string: 'org.obiba.opal.http.port'
      #     line: "org.obiba.opal.http.port={{opalHTTPport}}"

      # - name: Opal - Configure Port (HTTPS)
      #   become: true
      #   lineinfile:
      #     path: /etc/opal/opal-config.properties
      #     search_string: 'org.obiba.opal.https.port'
      #     line: "org.obiba.opal.https.port={{opalHTTPSport}}"

      - name: Opal - Restarting Opal to Update Configuration
        become: true
        systemd:
          name: opal
          state: restarted

    # - name: Rock Installation and Configuration
    #  block:
    #    - name: Rock - Installing Rock
    #      become: true
    #      apt:
    #        name: rock
    #      async: 900
    #      poll: 900
        
        ## https://rockdoc.obiba.org/en/latest/admin/configuration.html#users-configuration
        ## This Step is required for when ROCK_HOME is not defined
        ## It defaults to '/etc/opal'
        #- name: Rock - Set Rock Config
        #  ansible.builtin.set_fact:
        #    ROCK_CONFIG_PATH: "/etc/opal/rock/conf/application.yml"
        #  register: rock_set_fact_output
        #- debug: var=rock_set_fact_output
        ## Step 1: Edit File (# administrator, can do all)
        ## https://docs.ansible.com/ansible/latest/collections/ansible/builtin/blockinfile_module.html
        ##security:
        ##  users:
        ##  # administrator, can do all
        ##  - id: administrator
        ##    secret: "{bcrypt}$2y$10$Ds/CB6jlY5a4/NU4.RvRI.9oZ16Bp6hx/Xcct1c2XFwYRdMbTHJVu"
        ##    roles: administrator

        ## similarly manager and user are 1, 2

        ## yedit from Ansible Galaxy to configure .yamls
        #- name: Rock - Check Admin Username Readable
        #  become: true
        #  yedit:
        #    src: "/etc/opal/rock/conf/application.yml"
        #    key: security.users
        #    state: "list"
        #  register: yeditout
        #- debug: var=yeditout
        #- name: Rock - Update Admin Username
        #  become: true
        #  yedit:
        #    src: "/etc/opal/rock/conf/application.yml"
        #    key: security.users[0].id
        #    value: "{{rockadmin}}"
        #- name: Rock - Update Admin Password
        #  become: true
        #  yedit:
        #    src: "{{ROCK_CONFIG_PATH}}"
        #    key: security.users[0].secret
        #    value: "{{rockpass}}"
        
        ## Step 3: Restart Rock Service
        #- name: Rock - Check if Rock Running
        #  become: true
        #  systemd:
        #    name: rock
        #    state: restarted

        ## Step 4: Check Rock Service Running
        #- name: Rock - Check if Rock Running
        #  become: true
        #  systemd:
        #    name: rock
        #    state: started

        ## Step 5: Update variables on opal-side
        #- name: Opal - Set Opal Config
        #  ansible.builtin.set_fact:
        #    OPAL_CONFIG_PATH: "/etc/opal/opal/conf/opal-config.properties"
        #  register: opal_set_fact_output
        #- debug: var=opal_set_fact_output
        #- name: Opal - Update Rock Admin Username
        #  become: true
        #  lineinfile:
        #    path: "{{OPAL_CONFIG_PATH}}"
        #    search_string: 'rock.default.administrator.username'
        #    line: "rock.default.administrator.username={{rockadmin}}"
        #    state: present
        #- name: Opal - Update Rock Admin Password
        #  become: true
        #  lineinfile:
        #    path: "{{OPAL_CONFIG_PATH}}"
        #    search_string: 'rock.default.administrator.password'
        #    line: "rock.default.administrator.password={{rockpass}}"
        #    state: present

        ## Step 6: Restart Opal
        #- name: Opal - Restarting Opal to Update Rock Information
        #  become: true
        #  systemd:
        #    name: opal
        #    state: restarted

        ## Step 7: Check opal running
        #- name: Opal - Check Opal running correctly
        #  become: true
        #  systemd:
        #    name: opal
        #    state: started

    - name: Opal Python API Installation
      block:
        - name: PIP Installation
          become: true
          apt:
            name: python3-pip
        - name: Opal Python API Installation
          become: true
          shell: pip install obiba-opal
          register: obiba_opal_output
